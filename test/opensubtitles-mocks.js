/* eslint-disable */ 
const nock = require('nock');

nock('http://api.opensubtitles.org:80', {"encodedQueryParams":true})
  .persist()
  .post('/xml-rpc', "<?xml version=\"1.0\"?><methodCall><methodName>LogIn</methodName><params><param><value><string/></value></param><param><value><string/></value></param><param><value><string>en</string></value></param><param><value><string>OS_API_MOCK_KEY</string></value></param></params></methodCall>")
  .reply(200, "<?xml version=\"1.0\" encoding=\"utf-8\"?><methodResponse><params><param><value><struct><member><name>token</name><value><string>rq6rfGrouzLRAtE3HZEOO5ieOw8</string></value></member><member><name>status</name><value><string>200 OK</string></value></member><member><name>seconds</name><value><double>0.016</double></value></member></struct></value></param></params></methodResponse>");

nock('http://api.opensubtitles.org:80', {"encodedQueryParams":true})
  .persist()
  .post('/xml-rpc', "<?xml version=\"1.0\"?><methodCall><methodName>CheckMovieHash</methodName><params><param><value><string>rq6rfGrouzLRAtE3HZEOO5ieOw8</string></value></param><param><value><array><data><value><string>8e245d9679d31e12</string></value></data></array></value></param></params></methodCall>")
  .reply(200, "<?xml version=\"1.0\" encoding=\"utf-8\"?><methodResponse><params><param><value><struct><member><name>status</name><value><string>200 OK</string></value></member><member><name>data</name><value><struct><member><name>8e245d9679d31e12</name><value><struct><member><name>MovieHash</name><value><string>8e245d9679d31e12</string></value></member><member><name>MovieImdbID</name><value><string>0462538</string></value></member><member><name>MovieName</name><value><string>The Simpsons Movie</string></value></member><member><name>MovieYear</name><value><string>2007</string></value></member><member><name>MovieKind</name><value><string>movie</string></value></member><member><name>SeriesSeason</name><value><string>0</string></value></member><member><name>SeriesEpisode</name><value><string>0</string></value></member><member><name>SeenCount</name><value><string>7</string></value></member><member><name>SubCount</name><value><string>7</string></value></member></struct></value></member></struct></value></member><member><name>not_processed</name><value><array><data/></array></value></member><member><name>seconds</name><value><double>0.004</double></value></member></struct></value></param></params></methodResponse>");

nock('http://api.opensubtitles.org:80', {"encodedQueryParams":true})
  .persist()
  .post('/xml-rpc', "<?xml version=\"1.0\"?><methodCall><methodName>GetIMDBMovieDetails</methodName><params><param><value><string>rq6rfGrouzLRAtE3HZEOO5ieOw8</string></value></param><param><value><string>0462538</string></value></param></params></methodCall>")
  .reply(200, "<?xml version=\"1.0\" encoding=\"utf-8\"?><methodResponse><params><param><value><struct><member><name>status</name><value><string>200 OK</string></value></member><member><name>data</name><value><struct><member><name>kind</name><value><string>movie</string></value></member><member><name>tagline</name><value><string>The movie event 18 years in the making.</string></value></member><member><name>duration</name><value><string>87 min</string></value></member><member><name>from_redis</name><value><string>false</string></value></member><member><name>rating</name><value><string>7.3</string></value></member><member><name>cast</name><value><struct><member><name>_0144657</name><value><string>Dan Castellaneta</string></value></member><member><name>_0001413</name><value><string>Julie Kavner</string></value></member><member><name>_0004813</name><value><string>Nancy Cartwright</string></value></member><member><name>_0810379</name><value><string>Yeardley Smith</string></value></member><member><name>_0000279</name><value><string>Hank Azaria</string></value></member><member><name>_0733427</name><value><string>Harry Shearer</string></value></member><member><name>_0370788</name><value><string>Pamela Hayden</string></value></member><member><name>_0534134</name><value><string>Tress MacNeille</string></value></member><member><name>_0000983</name><value><string>Albert Brooks</string></value></member><member><name>_0927293</name><value><string>Karl Wiedergott</string></value></member><member><name>_0908761</name><value><string>Marcia Wallace</string></value></member><member><name>_0853122</name><value><string>Russi Taylor</string></value></member><member><name>_0744648</name><value><string>Maggie Roswell</string></value></member><member><name>_0742814</name><value><string>Phil Rosenthal</string></value></member><member><name>_0035626</name><value><string>Billie Joe Armstrong</string></value></member></struct></value></member><member><name>id</name><value><string>0462538</string></value></member><member><name>goofs</name><value><string>Size of the hole atop the dome.</string></value></member><member><name>title</name><value><string>The Simpsons Movie</string></value></member><member><name>writers</name><value><struct><member><name>_0000985</name><value><string>James L. Brooks</string></value></member><member><name>_0004981</name><value><string>Matt Groening</string></value></member></struct></value></member><member><name>cover</name><value><string>https://m.media-amazon.com/images/M/MV5BMTgxMDczMTA5N15BMl5BanBnXkFtZTcwMzk1MzMzMw@@._V1_UX182_CR0,0,182,268_AL_.jpg</string></value></member><member><name>votes</name><value><string>301080</string></value></member><member><name>trivia</name><value><string>The choral version of &#34;Spider Pig&#34; from the movie's soundtrack, credited to Hans Zimmer, reached #24 on the British singles chart for the week ending 2007-08-05. See more &#62;&#62;</string></value></member><member><name>year</name><value><string>2007</string></value></member><member><name>imdb_status</name><value><string>Fresh</string></value></member><member><name>request_from</name><value><string>api_cache_redis</string></value></member></struct></value></member><member><name>seconds</name><value><double>0.007</double></value></member></struct></value></param></params></methodResponse>");

nock('http://api.opensubtitles.org:80', {"encodedQueryParams":true})
  .persist()
  .post('/xml-rpc', "<?xml version=\"1.0\"?><methodCall><methodName>CheckMovieHash</methodName><params><param><value><string>rq6rfGrouzLRAtE3HZEOO5ieOw8</string></value></param><param><value><array><data><value><string>f4245d9379d31e30</string></value></data></array></value></param></params></methodCall>")
  .reply(200, "<?xml version=\"1.0\" encoding=\"utf-8\"?><methodResponse><params><param><value><struct><member><name>status</name><value><string>200 OK</string></value></member><member><name>data</name><value><struct><member><name>f4245d9379d31e30</name><value><array><data/></array></value></member></struct></value></member><member><name>not_processed</name><value><array><data/></array></value></member><member><name>seconds</name><value><double>0.017</double></value></member></struct></value></param></params></methodResponse>");

nock('http://api.opensubtitles.org:80', {"encodedQueryParams":true})
  .persist()
  .post('/xml-rpc', "<?xml version=\"1.0\"?><methodCall><methodName>CheckMovieHash</methodName><params><param><value><string>rq6rfGrouzLRAtE3HZEOO5ieOw8</string></value></param><param><value><array><data><value><string>h4245d9379d31e33</string></value></data></array></value></param></params></methodCall>")
  .reply(503, "<?xml version=\"1.0\" encoding=\"utf-8\"?><methodResponse><params><param><value><struct><member><name>status</name><value><string>API seems offline</string></value></member><member><name>data</name><value><struct><member><name>h4245d9379d31e33</name><value><array><data/></array></value></member></struct></value></member><member><name>not_processed</name><value><array><data/></array></value></member><member><name>seconds</name><value><double>0.004</double></value></member></struct></value></param></params></methodResponse>");

nock('http://api.opensubtitles.org:80', {"encodedQueryParams":true})
  .persist()
  .post('/xml-rpc', "<?xml version=\"1.0\"?><methodCall><methodName>CheckMovieHash</methodName><params><param><value><string>rq6rfGrouzLRAtE3HZEOO5ieOw8</string></value></param><param><value><array><data><value><string>a04cfbeafc4af7eb</string></value></data></array></value></param></params></methodCall>")
  .reply(200, "<?xml version=\"1.0\" encoding=\"utf-8\"?><methodResponse><params><param><value><struct><member><name>status</name><value><string>200 OK</string></value></member><member><name>data</name><value><struct><member><name>a04cfbeafc4af7eb</name><value><struct><member><name>MovieHash</name><value><string>a04cfbeafc4af7eb</string></value></member><member><name>MovieImdbID</name><value><string>7860308</string></value></member><member><name>MovieName</name><value><string>&#34;American Dad!&#34; Episode #15.1</string></value></member><member><name>MovieYear</name><value><string>2020</string></value></member><member><name>MovieKind</name><value><string>episode</string></value></member><member><name>SeriesSeason</name><value><string>15</string></value></member><member><name>SeriesEpisode</name><value><string>1</string></value></member><member><name>SeenCount</name><value><string>1</string></value></member><member><name>SubCount</name><value><string>1</string></value></member></struct></value></member></struct></value></member><member><name>not_processed</name><value><array><data/></array></value></member><member><name>seconds</name><value><double>0.005</double></value></member></struct></value></param></params></methodResponse>")

nock('http://api.opensubtitles.org:80', {"encodedQueryParams":true})
  .persist()
  .post('/xml-rpc', "<?xml version=\"1.0\"?><methodCall><methodName>GetIMDBMovieDetails</methodName><params><param><value><string>rq6rfGrouzLRAtE3HZEOO5ieOw8</string></value></param><param><value><string>7860308</string></value></param></params></methodCall>")
  .reply(200, "<?xml version=\"1.0\" encoding=\"utf-8\"?><methodResponse><params><param><value><struct><member><name>status</name><value><string>200 OK</string></value></member><member><name>data</name><value><array><data/></array></value></member><member><name>seconds</name><value><double>19.011</double></value></member></struct></value></param></params></methodResponse>")

nock('http://api.opensubtitles.org:80', {"encodedQueryParams":true})
  .persist()
  .post('/xml-rpc', "<?xml version=\"1.0\"?><methodCall><methodName>CheckMovieHash</methodName><params><param><value><string>rq6rfGrouzLRAtE3HZEOO5ieOw8</string></value></param><param><value><array><data><value><string>aad16027e51ff49f</string></value></data></array></value></param></params></methodCall>")
  .reply(200, "<?xml version=\"1.0\" encoding=\"utf-8\"?><methodResponse><params><param><value><struct><member><name>status</name><value><string>200 OK</string></value></member><member><name>data</name><value><struct><member><name>aad16027e51ff49f</name><value><struct><member><name>MovieHash</name><value><string>aad16027e51ff49f</string></value></member><member><name>MovieImdbID</name><value><string>0678478</string></value></member><member><name>MovieName</name><value><string>&#34;Prison Break&#34; Cute Poison</string></value></member><member><name>MovieYear</name><value><string>2005</string></value></member><member><name>MovieKind</name><value><string>episode</string></value></member><member><name>SeriesSeason</name><value><string>1</string></value></member><member><name>SeriesEpisode</name><value><string>4</string></value></member><member><name>SeenCount</name><value><string>2468</string></value></member><member><name>SubCount</name><value><string>35</string></value></member></struct></value></member></struct></value></member><member><name>not_processed</name><value><array><data/></array></value></member><member><name>seconds</name><value><double>0.232</double></value></member></struct></value></param></params></methodResponse>")

nock('http://api.opensubtitles.org:80', {"encodedQueryParams":true})
  .persist()
  .post('/xml-rpc', "<?xml version=\"1.0\"?><methodCall><methodName>GetIMDBMovieDetails</methodName><params><param><value><string>rq6rfGrouzLRAtE3HZEOO5ieOw8</string></value></param><param><value><string>0678478</string></value></param></params></methodCall>")
  .reply(200, "<?xml version=\"1.0\" encoding=\"utf-8\"?><methodResponse><params><param><value><struct><member><name>status</name><value><string>200 OK</string></value></member><member><name>data</name><value><struct><member><name>writers</name><value><struct><member><name>_0771228</name><value><string>Paul Scheuring</string></value></member><member><name>_1631709</name><value><string>Matt Olmstead</string></value></member></struct></value></member><member><name>rating</name><value><string>8.7</string></value></member><member><name>duration</name><value><string>44 min</string></value></member><member><name>title</name><value><string>&#34;Prison Break&#34; Cute Poison</string></value></member><member><name>from_redis</name><value><string>false</string></value></member><member><name>kind</name><value><string>episode</string></value></member><member><name>episodeof</name><value><struct><member><name>_0455275</name><value><string>Cute Poison</string></value></member></struct></value></member><member><name>year</name><value><string>2005</string></value></member><member><name>cover</name><value><string>https://m.media-amazon.com/images/M/MV5BMzY1MzYwNDczN15BMl5BanBnXkFtZTgwMTk2NDg0MjE@._V1_UY268_CR87,0,182,268_AL_.jpg</string></value></member><member><name>id</name><value><string>0678478</string></value></member><member><name>votes</name><value><string>3278</string></value></member><member><name>goofs</name><value><string>When Scofield is talking to Sucre and unscrewing the bolt from the toilet, look closely at his fingers. He isn't actually unscrewing anything, there's no screw in the hole or in his hand, its all just well placed sound effects that make you think there is a screw.</string></value></member><member><name>imdb_status</name><value><string>Fresh</string></value></member><member><name>cast</name><value><struct><member><name>_0700712</name><value><string>Dominic Purcell</string></value></member><member><name>_0589505</name><value><string>Wentworth Miller</string></value></member><member><name>_0000677</name><value><string>Robin Tunney</string></value></member><member><name>_0001780</name><value><string>Peter Stormare</string></value></member><member><name>_1004774</name><value><string>Amaury Nolasco</string></value></member><member><name>_0931898</name><value><string>Wade Williams</string></value></member><member><name>_0011882</name><value><string>Paul Adelstein</string></value></member><member><name>_0915637</name><value><string>Sarah Wayne Callies</string></value></member><member><name>_0593734</name><value><string>Silas Weir Mitchell</string></value></member><member><name>_0342029</name><value><string>Frank Grillo</string></value></member><member><name>_0345477</name><value><string>Camille Guaty</string></value></member><member><name>_0127988</name><value><string>Kurt Caceres</string></value></member><member><name>_1180243</name><value><string>Danny McCarthy</string></value></member><member><name>_0005078</name><value><string>Stacy Keach</string></value></member><member><name>_0920255</name><value><string>Jason Wells</string></value></member></struct></value></member><member><name>episode</name><value><string>4</string></value></member><member><name>season</name><value><string>1</string></value></member><member><name>request_from</name><value><string>api_cache_redis</string></value></member></struct></value></member><member><name>seconds</name><value><double>0.008</double></value></member></struct></value></param></params></methodResponse>")

nock('http://api.opensubtitles.org:80', {"encodedQueryParams":true})
  .persist()
  .post('/xml-rpc', "<?xml version=\"1.0\"?><methodCall><methodName>CheckMovieHash</methodName><params><param><value><string>rq6rfGrouzLRAtE3HZEOO5ieOw8</string></value></param><param><value><array><data><value><string>0f0f4c9f3416e24f</string></value></data></array></value></param></params></methodCall>")
  .reply(200, "<?xml version=\"1.0\" encoding=\"utf-8\"?><methodResponse><params><param><value><struct><member><name>status</name><value><string>200 OK</string></value></member><member><name>data</name><value><struct><member><name>0f0f4c9f3416e24f</name><value><struct><member><name>MovieHash</name><value><string>0f0f4c9f3416e24f</string></value></member><member><name>MovieImdbID</name><value><string>0816692</string></value></member><member><name>MovieName</name><value><string>Interstellar</string></value></member><member><name>MovieYear</name><value><string>2014</string></value></member><member><name>MovieKind</name><value><string>movie</string></value></member><member><name>SeriesSeason</name><value><string>0</string></value></member><member><name>SeriesEpisode</name><value><string>0</string></value></member><member><name>SeenCount</name><value><string>137294</string></value></member><member><name>SubCount</name><value><string>180</string></value></member></struct></value></member></struct></value></member><member><name>not_processed</name><value><array><data/></array></value></member><member><name>seconds</name><value><double>0.003</double></value></member></struct></value></param></params></methodResponse>")

nock('http://api.opensubtitles.org:80', {"encodedQueryParams":true})
  .persist()
  .post('/xml-rpc', "<?xml version=\"1.0\"?><methodCall><methodName>GetIMDBMovieDetails</methodName><params><param><value><string>rq6rfGrouzLRAtE3HZEOO5ieOw8</string></value></param><param><value><string>0816692</string></value></param></params></methodCall>")
  .reply(200, "<?xml version=\"1.0\" encoding=\"utf-8\"?><methodResponse><params><param><value><struct><member><name>status</name><value><string>200 OK</string></value></member><member><name>data</name><value><struct><member><name>directors</name><value><struct><member><name>_0634300</name><value><string>Jonathan Nolan</string></value></member><member><name>_0634240</name><value><string>Christopher Nolan</string></value></member></struct></value></member><member><name>from_redis</name><value><string>false</string></value></member><member><name>rating</name><value><string>8.7</string></value></member><member><name>country</name><value><array><data><value><string>United States</string></value><value><string>United Kingdom</string></value><value><string>Canada</string></value></data></array></value></member><member><name>year</name><value><string>2014</string></value></member><member><name>imdb_status</name><value><string>Fresh</string></value></member><member><name>cast</name><value><struct><member><name>_0000190</name><value><string>Matthew McConaughey</string></value></member><member><name>_0004266</name><value><string>Anne Hathaway</string></value></member><member><name>_1567113</name><value><string>Jessica Chastain</string></value></member></struct></value></member><member><name>language</name><value><array><data><value><string>English</string></value></data></array></value></member><member><name>id</name><value><string>0816692</string></value></member><member><name>genres</name><value><array><data><value><string>Adventure</string></value><value><string>Drama</string></value><value><string>Sci-Fi</string></value></data></array></value></member><member><name>kind</name><value><string>movie</string></value></member><member><name>votes</name><value><string>1710185</string></value></member><member><name>title</name><value><string>Interstellar</string></value></member><member><name>cover</name><value><string>https://m.media-amazon.com/images/M/MV5BZjdkOTU3MDktN2IxOS00OGEyLWFmMjktY2FiMmZkNWIyODZiXkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_.jpg</string></value></member><member><name>plot</name><value><string>A team of explorers travel through a wormhole in space in an attempt to ensure humanity's survival.</string></value></member><member><name>request_from</name><value><string>api_cache_redis</string></value></member></struct></value></member><member><name>seconds</name><value><double>0.003</double></value></member></struct></value></param></params></methodResponse>")

nock('http://api.opensubtitles.org:80', {"encodedQueryParams":true})
  .persist()
  .post('/xml-rpc', "<?xml version=\"1.0\"?><methodCall><methodName>CheckMovieHash</methodName><params><param><value><string>rq6rfGrouzLRAtE3HZEOO5ieOw8</string></value></param><param><value><array><data><value><string>35acba68a9dcfc8f</string></value></data></array></value></param></params></methodCall>")
  .reply(200, "<?xml version=\"1.0\" encoding=\"utf-8\"?><methodResponse><params><param><value><struct><member><name>status</name><value><string>200 OK</string></value></member><member><name>data</name><value><struct><member><name>35acba68a9dcfc8f</name><value><struct><member><name>MovieHash</name><value><string>35acba68a9dcfc8f</string></value></member><member><name>MovieImdbID</name><value><string>5538198</string></value></member><member><name>MovieName</name><value><string>&#34;Prison Break&#34; Behind the Eyes</string></value></member><member><name>MovieYear</name><value><string>2017</string></value></member><member><name>MovieKind</name><value><string>episode</string></value></member><member><name>SeriesSeason</name><value><string>5</string></value></member><member><name>SeriesEpisode</name><value><string>9</string></value></member><member><name>SeenCount</name><value><string>15428</string></value></member><member><name>SubCount</name><value><string>36</string></value></member></struct></value></member></struct></value></member><member><name>not_processed</name><value><array><data/></array></value></member><member><name>seconds</name><value><double>0.006</double></value></member></struct></value></param></params></methodResponse>")

nock('http://api.opensubtitles.org:80', {"encodedQueryParams":true})
  .persist()
  .post('/xml-rpc', "<?xml version=\"1.0\"?><methodCall><methodName>GetIMDBMovieDetails</methodName><params><param><value><string>rq6rfGrouzLRAtE3HZEOO5ieOw8</string></value></param><param><value><string>5538198</string></value></param></params></methodCall>")
  .reply(200, "<?xml version=\"1.0\" encoding=\"utf-8\"?><methodResponse><params><param><value><struct><member><name>status</name><value><string>200 OK</string></value></member><member><name>data</name><value><struct><member><name>country</name><value><array><data><value><string>United States</string></value></data></array></value></member><member><name>id</name><value><string>5538198</string></value></member><member><name>from_redis</name><value><string>false</string></value></member><member><name>year</name><value><string>2017</string></value></member><member><name>cast</name><value><struct><member><name>_0700712</name><value><string>Dominic Purcell</string></value></member><member><name>_0589505</name><value><string>Wentworth Miller</string></value></member><member><name>_0915637</name><value><string>Sarah Wayne Callies</string></value></member></struct></value></member><member><name>genres</name><value><array><data><value><string>Action</string></value><value><string>Crime</string></value><value><string>Drama</string></value></data></array></value></member><member><name>episodeof</name><value><struct><member><name>_0455275</name><value><string>Behind the Eyes</string></value></member></struct></value></member><member><name>cover</name><value><string>https://m.media-amazon.com/images/M/MV5BYzI4YzNkZTAtNzkzNy00NmJjLTk2NzEtOTBjMWRiYTM0ZDUzXkEyXkFqcGdeQXVyNTgyNDM1OTU@._V1_.jpg</string></value></member><member><name>rating</name><value><string>8.5</string></value></member><member><name>kind</name><value><string>episode</string></value></member><member><name>plot</name><value><string>Dangerous threats keep Michael and Lincoln fighting to protect Sara and Mike. Meanwhile, Poseidon continues to try and outsmart Michael and the rest of the gang, which leads them to the ultimate showdown, and not everyone makes it ou</string></value></member><member><name>votes</name><value><string>4182</string></value></member><member><name>directors</name><value><struct><member><name>_0771228</name><value><string>Paul T. Scheuring</string></value></member></struct></value></member><member><name>language</name><value><array><data><value><string>English</string></value></data></array></value></member><member><name>imdb_status</name><value><string>Fresh</string></value></member><member><name>title</name><value><string>&#34;Prison Break&#34; Behind the Eyes</string></value></member><member><name>episode</name><value><string>9</string></value></member><member><name>season</name><value><string>5</string></value></member><member><name>request_from</name><value><string>api_cache_redis</string></value></member></struct></value></member><member><name>seconds</name><value><double>0.003</double></value></member></struct></value></param></params></methodResponse>")